{
  "name": "node.js-security",
  "version": "1.0.0",
  "description": "How can you protect your Node.js applications from potential threats? In this course, Emmanuel Henri shares best practices that can help Node.js developers secure their apps at all levels, from packages to the server level. Emmanuel helps to familiarize you with the most common security risks in Node.js., including cross-site scripting and server-side injection. He dives into best practices around packages, data, and the server level. Plus, he covers tools—such as Snyk and Burp—that you can use to test your Node.js projects.",
  "main": "index.js",
  "scripts": {
    "start": "nodemon ./index.js --exec babel-node -e js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reubennn/nodejs-security.git"
  },
  "author": "Reuben Smith",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/reubennn/nodejs-security/issues"
  },
  "homepage": "https://github.com/reubennn/nodejs-security#readme",
  "dependencies": {
    "bcrypt": "^5.0.0",
    "body-parser": "^1.19.2",
    "cookie-parser": "^1.4.5",
    "cookie-session": "^1.4.0",
    "csurf": "^1.11.0",
    "express": "^4.17.3",
    "express-rate-limit": "^5.1.3",
    "helmet": "^4.1.0",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^5.10.1",
    "nodemon": "^2.0.4",
    "validator": "^13.1.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.10.5",
    "@babel/core": "^7.11.4",
    "@babel/node": "^7.10.5",
    "@babel/preset-env": "^7.11.0",
    "babel-eslint": "^10.1.0",
    "eslint": "^7.7.0",
    "eslint-plugin-prettier": "^3.1.4"
  }
}
